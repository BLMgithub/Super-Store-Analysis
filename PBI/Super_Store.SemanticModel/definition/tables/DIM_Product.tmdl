table DIM_Product
	lineageTag: 59512a1a-cb31-4bcd-9374-bb72ab5d1b91

	column ProductID
		dataType: string
		lineageTag: 8691a85c-0b20-423f-b7bc-9fc93129da77
		summarizeBy: none
		sourceColumn: ProductID

		annotation SummarizationSetBy = Automatic

	column ProductName
		dataType: string
		lineageTag: e7532094-198f-4377-b47a-e2c4256cad98
		summarizeBy: none
		sourceColumn: ProductName

		annotation SummarizationSetBy = Automatic

	column Performance
		dataType: string
		lineageTag: fae495e0-b3c0-4b5b-b186-58a710b6ecaf
		summarizeBy: none
		sourceColumn: Performance
		sortByColumn: PerformanceSort

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column SubCategory
		dataType: string
		lineageTag: 528e486f-c686-4c0a-8dd3-0879ae35d2fa
		summarizeBy: none
		sourceColumn: SubCategory

		annotation SummarizationSetBy = Automatic

	column Category
		dataType: string
		lineageTag: 0f8194ce-bd26-4669-9a60-1937a7d62565
		summarizeBy: none
		sourceColumn: Category

		annotation SummarizationSetBy = Automatic

	column PerformanceSort
		dataType: string
		lineageTag: 7333b297-d4cc-49c6-965c-7575f7c631f3
		summarizeBy: none
		sourceColumn: PerformanceSort

		annotation SummarizationSetBy = Automatic

	partition DIM_Product = m
		mode: import
		source =
				let
				    Source = Sql.Databases("LAPTOP-CPPC75DP\SQLEXPRESS"),
				    Super_Store = Source{[Name="Super_Store"]}[Data],
				    dbo_DIM_Product = Super_Store{[Schema="dbo",Item="DIM_Product"]}[Data],
				    #"Added Conditional Column" = Table.AddColumn(dbo_DIM_Product, "PerformanceSort", each if [Performance] = "High" then 1 else if [Performance] = "Moderate" then 2 else if [Performance] = "Low" then 3 else null)
				in
				    #"Added Conditional Column"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

